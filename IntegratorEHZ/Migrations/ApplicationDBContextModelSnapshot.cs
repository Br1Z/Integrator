// <auto-generated />
using System;
using IntegratorEHZ.App_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntegratorEHZ.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("IntegratorEHZ.Models.DataSKZ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ControlMode")
                        .HasColumnType("integer");

                    b.Property<bool>("DistantPowerControl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long?>("EnergyMeterValue1")
                        .HasColumnType("bigint");

                    b.Property<long?>("EnergyMeterValue2")
                        .HasColumnType("bigint");

                    b.Property<string>("Errors")
                        .HasColumnType("text");

                    b.Property<bool>("LineDisconnection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("MainOrReserved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int?>("OutputCurrent")
                        .HasColumnType("integer");

                    b.Property<int?>("OutputVoltage")
                        .HasColumnType("integer");

                    b.Property<short?>("PolProtectPotent")
                        .HasColumnType("smallint");

                    b.Property<int?>("PowerLineVoltage1")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerLineVoltage2")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState1")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState10")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState11")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState12")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState2")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState3")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState4")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState5")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState6")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState7")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState8")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState9")
                        .HasColumnType("integer");

                    b.Property<long?>("ProtectionTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("SetOutputCurrent")
                        .HasColumnType("integer");

                    b.Property<short?>("SetPolPotential")
                        .HasColumnType("smallint");

                    b.Property<int?>("SetStabControlMode")
                        .HasColumnType("integer");

                    b.Property<short?>("SetSumPotential")
                        .HasColumnType("smallint");

                    b.Property<bool>("StationControllMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("StationFailure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<short?>("SumProtectPotent")
                        .HasColumnType("smallint");

                    b.Property<bool>("UnauthorisedAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long?>("WorkTime")
                        .HasColumnType("bigint");

                    b.Property<int>("deviceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("deviceId");

                    b.ToTable("DataSKZ");
                });

            modelBuilder.Entity("IntegratorEHZ.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("IMEI")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Internal_Protocol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IMEI")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("IntegratorEHZ.Models.LogSKZ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ControlMode")
                        .HasColumnType("integer");

                    b.Property<bool>("DistantPowerControl")
                        .HasColumnType("boolean");

                    b.Property<long?>("EnergyMeterValue1")
                        .HasColumnType("bigint");

                    b.Property<long?>("EnergyMeterValue2")
                        .HasColumnType("bigint");

                    b.Property<string>("Errors")
                        .HasColumnType("text");

                    b.Property<int>("Id_device")
                        .HasColumnType("integer");

                    b.Property<bool>("LineDisconnection")
                        .HasColumnType("boolean");

                    b.Property<bool>("MainOrReserved")
                        .HasColumnType("boolean");

                    b.Property<int?>("OutputCurrent")
                        .HasColumnType("integer");

                    b.Property<int?>("OutputVoltage")
                        .HasColumnType("integer");

                    b.Property<short?>("PolProtectPotent")
                        .HasColumnType("smallint");

                    b.Property<int?>("PowerLineVoltage1")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerLineVoltage2")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState1")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState10")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState11")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState12")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState2")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState3")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState4")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState5")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState6")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState7")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState8")
                        .HasColumnType("integer");

                    b.Property<int?>("PowerModuleState9")
                        .HasColumnType("integer");

                    b.Property<long?>("ProtectionTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("SetOutputCurrent")
                        .HasColumnType("integer");

                    b.Property<short?>("SetPolPotential")
                        .HasColumnType("smallint");

                    b.Property<int?>("SetStabControlMode")
                        .HasColumnType("integer");

                    b.Property<short?>("SetSumPotential")
                        .HasColumnType("smallint");

                    b.Property<bool>("StationControllMode")
                        .HasColumnType("boolean");

                    b.Property<bool>("StationFailure")
                        .HasColumnType("boolean");

                    b.Property<short?>("SumProtectPotent")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("TimeReceivedData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("UnauthorisedAccess")
                        .HasColumnType("boolean");

                    b.Property<long?>("WorkTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LogSKZ");
                });

            modelBuilder.Entity("IntegratorEHZ.Models.DataSKZ", b =>
                {
                    b.HasOne("IntegratorEHZ.Models.Device", "device")
                        .WithMany("dataSKZ")
                        .HasForeignKey("deviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("device");
                });

            modelBuilder.Entity("IntegratorEHZ.Models.Device", b =>
                {
                    b.Navigation("dataSKZ");
                });
#pragma warning restore 612, 618
        }
    }
}
